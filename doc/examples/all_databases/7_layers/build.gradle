description = 'SQLG layers example'

apply plugin: 'java'

apply from: '../../db.gradle'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['src']

compileJava.options.encoding = 'UTF-8'

dependencies {
    compile 'com.github.osobolev.sqlg2:sqlg2-full:4.0'
    runtime driverClasspath
}

task preprocess << {
    ant.taskdef(name: 'sqlg', classname: 'sqlg2.Preprocess', classpath: configurations.runtime.asPath)
    ant.sqlg(classpath: configurations.runtime.asPath,
             driverclass: jdbcDriver, dbclass: dbClass,
             url: jdbcUrl, user: username, password: password,
             implpack: 'wrapper', wrappack: 'wrapper',
             srcroot: 'src', encoding: compileJava.options.encoding) {
        fileset(dir: 'src') {
            include(name: 'layers/dao/Layer1.java')
        }
    }
    ant.sqlg(classpath: configurations.runtime.asPath,
             driverclass: jdbcDriver, dbclass: dbClass,
             url: jdbcUrl, user: username, password: password,
             implpack: 'wrapper', wrappack: 'wrapper', srcroot: 'src') {
        fileset(dir: 'src') {
            include(name: 'layers/dao/Layer2.java')
        }
    }
}
preprocess.onlyIf { doPreprocess }
compileJava.dependsOn(preprocess)

task run(type: JavaExec, dependsOn: classes) {
    main = 'layers.LayersTest'
    classpath = sourceSets.main.runtimeClasspath
    args([jdbcDriver, jdbcUrl, username, password, dbClass].collect {
        it == '' ? '""' : it
    })
}
